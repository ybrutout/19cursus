printf("buffer : %s\n", buffer);
printf("save : %s\n", save);
printf("reader : %d\n", reader);
printf("save 2: %s\n", save);
printf("HELLO HELLO HELLO HELLO HELLO HELLO\n");

while (gnl_cmp(save, '\n') < 0)
	{
		printf("hey je suis la\n");
		if ((reader = read(fd, buffer, BUFFER_SIZE)) < 0)
			return(-1);
		if(gnl_cmp(buffer, '\n') > 0)
		{
			save = gnl_strjoin(save, buffer);
			gnl_strcpy(save, line[0], '\n');
			gnl_sve(save);
			return (1);
		}
		else
		{
			while (gnl_cmp(buffer, '\n') < 0 || reader != 0)
			{
				printf("buffer 1 : %s\n", buffer);
				save = gnl_strjoin(save, buffer);
				printf("buffer 2 : %s\n", buffer);
				printf("save 1 : %s\n", save);
				reader = read(fd, buffer, BUFFER_SIZE);
				printf("buffer 3 : %s\n", buffer);
				printf("save 2 : %s\n", save);
				save = gnl_strjoin(save, buffer);
				printf("buffer 4 : %s\n", buffer);
			}
			gnl_strcpy(save, line[0], '\n');
			return (1);
		}
	}


int					get_next_line(int fd, char **line)
{
	char			*buffer;
	static char		*save;
	ssize_t			reader;

	if (fd < 0 || fd > OPEN_MAX || !line  || BUFFER_SIZE < 1)
		return(-1);
	if (!(buffer = (char*)malloc(sizeof(char) * (BUFFER_SIZE +1))))
		return (-1);
	reader = BUFFER_SIZE + 1;
	printf("reader avant = %zu\n", reader);
	while (gnl_cmp(save, '\n') == 0 && reader > 0)
	{
		if ((reader = read(fd, buffer, BUFFER_SIZE)) < 0)
			return(-1);
		printf("reader pendant = %zu\n", reader);
		buffer[reader] = 0;
		save = gnl_strjoin(save, buffer);
	}
	printf("save = '%s'\n", save);
	printf("reader = %zu\n", reader);
	if (reader < BUFFER_SIZE)
	{
		*line = gnl_strdup(save, '\0');
		free((void*)save);
		printf("save apres = '%s'\n", save);
		return (0);
	}
	if (gnl_cmp(save, '\n') > 0)
	{
		*line = gnl_strdup(save, '\n');
		gnl_sve(save, '\n');
		printf("save apres = '%s'\n", save);
		return (1);
	}
	return (-1);
}
