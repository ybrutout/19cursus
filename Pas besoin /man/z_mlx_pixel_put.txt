MiniLibX 3 " 19 septembre 2002 ".
NAME
MiniLibX - Dessiner à l'intérieur des fenêtres
SYNOPSYS

int mlx_pixel_put (void *mlx_ptr, void *win_ptr, int x, int y, int color) ;

int mlx_string_put(void *mlx_ptr, void *win_ptr, int x, int y, int color, char *string) ;

DESCRIPTION
La fonction mlx_pixel_put() dessine un pixel défini dans la fenêtre win_ptr en utilisant les coordonnées ( x, y), et la couleur spécifiée.
L'origine (0,0) est le coin supérieur gauche de la fenêtre, les axes x et y pointant respectivement vers la droite et le bas.
L'identifiant de connexion, mlx_ptr, est nécessaire (voir la page de manuel mlx).

Les paramètres de mlx_string_put() ont la même signification. Au lieu d'un simple pixel, la chaîne spécifiée sera affichée à ( x, y).

Les deux fonctions vont rejeter tout affichage en dehors de la fenêtre. Cela rend mlx_pixel_put lente. Pensez à utiliser des images à la place.

GESTION DES COULEURS
Le paramètre color a un type entier. La couleur affichée doit être encodée dans ce nombre entier, suivant un schéma défini.
Toutes les couleurs affichables peuvent être divisées en 3 couleurs de base : rouge, vert et bleu. Trois valeurs associées, dans la plage 0-255,
représentent la quantité de chaque couleur qui est mélangée pour créer la couleur d'origine. Ces trois valeurs doivent être définies dans l'entier pour afficher la bonne couleur.
la bonne couleur. Les trois octets les moins significatifs de ce nombre entier sont remplis comme indiqué dans l'image ci-dessous :

        | 0 | R | G | B | couleur entier
        +---+---+---+---+


En remplissant le nombre entier, assurez-vous d'éviter les problèmes d'endian. Rappelez-vous que l'octet "bleu" doit toujours être le moins significatif.

Selon les capacités du matériel, le bit le plus significatif peut gérer la transparence.
Attention, à l'inverse des classiques d'OpenGL, il ne représente pas l'opacité.

VOIR AUSSI
mlx(3), mlx_new_window(3), mlx_new_image(3), mlx_loop(3)


AUTEUR
Copyright ol@ - 2002-2019 - Olivier Crouzet
